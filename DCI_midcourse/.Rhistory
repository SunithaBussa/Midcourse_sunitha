labs(x="payments",
y="frequency",
title = paste("Distribution of",mod))
}
make_plot('HH')
make_plot('HIC')
make_plot('PD')
dci_data_ws %>%
select(payment,modality) %>%
filter(modality == 'HH') %>%
ggplot(aes(x=payment)) +
geom_histogram() +
labs(x="payments",
y="frequency",
title = "Distribution of Hemo Home Payments")
dci_data_ws %>%
select(payment,modality) %>%
#filter(payment>2800 & payment <3500) %>%
group_by(modality)
dci_data_ws %>%
select(payment,modality) %>%
filter(payment>2800 & payment <3500) %>%
#group_by(modality) %>%
filter(modality=='PD') %>%
ggplot(aes(x=payment)) +
geom_histogram(binwidth = 4000)
dci_data_ws %>%
select(payment,modality) %>%
filter(payment>2800 & payment <3500)
library(reshape2)
dci_long <- reshape2::melt(dci_data_ws)
ggplot(dci_long, aes(value)) + facet_wrap(~variable, scales = 'free_x') +
geom_histogram()
#frequency distribution with density lines
#x<- sample(0:30, 200, replace=T, prob=15 - abs(15 - 0:30))
x<-dci_data_ws$payment
## Calculate and plot the two histograms
hcum <- h <- hist(x, plot=FALSE)
hcum$counts <- cumsum(hcum$counts)
plot(hcum, main="")
plot(h, add=T, col="grey")
## Plot the density and cumulative density
d <- density(x)
lines(x = d$x, y = d$y * length(x) * diff(h$breaks)[1], lwd = 2)
lines(x = d$x, y = cumsum(d$y)/max(cumsum(d$y)) * length(x), lwd = 2)
#distribution by payment type
payment_type_dist<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,part_b)%>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment")
saveRDS(payment_type_dist,file="payment_type_dist.rds")
#plot the fequency distribution across different payment types
pl<-dci_data_ws %>%
select(dos_year,dos_month,location_id,payment,part_a,part_b_dme,part_b_phys,part_b)%>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
filter(dos_year==2017 & dos_month==1) %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
sum(is.na(dci_data$payment))
#fat tailed dis.
box_pl<-payment_type_dist %>%
filter(dos_year == 2017 & dos_month == 1) %>%
ggplot(aes(y = payment,x = payment_type,fill=payment_type)) +
geom_boxplot()+
#  scale_y_log10() +
theme_classic() +
labs(x="Payment type", y = "Payment",
title = "Payment distribution by payment types")
ggplotly(box_pl)
years_plot<- dci_data_ws %>%
group_by(dos_year,dos_month) %>%
summarise(sum_pay = sum(payment)) %>%
ungroup()
pl <- ggplot( years_plot,aes(y=sum_pay, x = dos_month ,fill=dos_year)) +
geom_bar(stat = "identity",position = 'dodge') +
labs(x="Months", y= "Payments") +
ggtitle("Total payments increase in each month")
pl
years_plot
dci_data_ws %>%
group_by(modality) %>%
summarise(payments = sum(payment)) %>%
ggplot(aes(x=modality,y=payments,fill = `payments`)) +
geom_bar(stat="identity" )
#show how modalities are doing by total payments
modality_pl<-dci_data_ws %>%
group_by(dos_year,modality) %>%
summarise(payments = sum(payment)) %>%
ungroup() %>%
ggplot(aes(x=dos_year,y=payments,fill=modality,color=modality))+
geom_bar(stat="identity",position="dodge") +
geom_text(aes(label = round(payments),vjust=0),postion=position_dodge(width=5)) +
labs(x="Modalities in 2017 and 2018",y="payments",title="Payments by modality")
modality_pl
dci_data_ws  %>%
ggplot(aes(x=dos_year,y=payment,color = modality)) +
geom_boxplot() +
scale_y_log10() +
labs(x = "Years",y="payments",
title = "Payments in in 2017 and 2018")
num_columns <- c("hgb","tsat","ferr","albumin","pth","ca","cca","ph","k","urr","ktv")
corrs<-dci_data_ws %>% select(num_columns) %>%
# drop_na_() %>%
cor()
corrs
library(corrplot)
corrplot(corrs,type = "upper",order = "hclust",
tl.col="black",tl.srt=45)
num_columns <- c("payment","hgb","tsat","ferr","albumin","pth","ca","cca","ph","k","urr","ktv")
corrs<-dci_data_ws %>% select(num_columns)  %>%
cor()
corrplot(corrs,type = "upper",order = "hclust",
tl.col="black",tl.srt=45)
tibble('variable' = corrs[1,2:12] %>% names(),'correlation' = corrs[1,2:12]) %>%
ggplot(aes(x=reorder(variable,correlation),y = correlation)) +
geom_point()+
geom_segment(aes(xend=variable,yend=0))+
coord_flip() +
geom_hline(yintercept = 0)
pl <- ggplot(dci_data_ws, aes(x=albumin,y=payment) ) +
geom_point(alpha=0.2) + geom_smooth(method = 'lm') +
scale_x_log10() +
scale_y_log10()
ggplotly(pl)
#unique(dci_data_ws$ktv)
#hgb vs payment
ggplot(dci_data_ws, aes(x=hgb,y=payment) ) +
geom_point() + geom_smooth(method = 'lm') +
scale_x_log10() +
labs(x="hgb", y = "payment", title = "Payment Vs hgb")
ggplot(dci_data_ws, aes(x=ca,y=payment) ) +
geom_point() + geom_smooth(method = 'lm') +
scale_x_log10() +
labs(x="ca", y = "payment", title = "Payment Vs ca")
#first prep the dataset to get the information on the map markers
payment_summary_by_loc<-dci_data_ws %>%
select(patient_id,location_id,dos_month,dos_year,payment,part_a,part_b_phys,part_b_dme,modality) %>%
group_by(location_id,dos_month,dos_year ) %>%
summarise(
total_patients = NROW(patient_id),
totalpayments = round(sum(payment),digits=2),
min_pay = min(payment),
max_pay = max(payment),
avg_pay = sum(payment)/NROW(patient_id)) %>%
ungroup() %>%
arrange(dos_year,dos_month)
#merge the grouped data with location dataset
payment_geom_summary <- merge(payment_summary_by_loc,locations,by = "location_id")
payment_geom_summary %>%
filter(location_id =='000055' & dos_month ==1 & dos_year ==2017)
#save it to rds file
saveRDS(payment_geom_summary, file = "DCI_midcourse/data/payment_geom_summary.rds")
leaflet(data= locations) %>%
addTiles() %>%
addMarkers(~longitude,
~latitude,
popup = ("hello"))
pl <- ggplot(dci_data_ws, aes(x=albumin,y=payment) ) +
geom_point(alpha=0.2) + geom_smooth(method = 'lm') +
scale_x_log10() +
scale_y_log10()
ggplotly(pl)
runApp()
runApp()
view(payment_summary_by_loc)
view(payment_summary_by_loc)
payment_summary_by_loc %>%
arrange(desc(payments))
View(payment_summary_by_loc)
payment_summary_by_loc %>%
arrange(desc(totalpayments))
payment_summary_by_loc %>%
arrange(desc(totalpayments)) %>%
filter(dos_month==2017)
payment_summary_by_loc %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2017)
payment_summary_by_loc %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2017 & dos_month == 1)
payment_geom_summary %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2017 & dos_month == 1)
payment_summary_by_loc %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2017 & dos_month == 1) %>%
ggplot(aes(x=location_id,y=avg_pay)) +
geom_col()
payment_summary_by_loc %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2017 & dos_month == 1) %>%
top_n(5) %>%
ggplot(aes(x=location_id,y=avg_pay)) +
geom_col()
#Top 5 locations with high average payments
loc_plt<-payment_summary_by_loc %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2017 & dos_month == 1) %>%
top_n(5) %>%
ggplot(aes(x=location_id,y=avg_pay)) +
geom_col()
ggplotly(loc_plt)
#Top 5 locations with high average payments
loc_plt<-payment_summary_by_loc %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2017 & dos_month == 1) %>%
top_n(5) %>%
ggplot(aes(x=location_id,y=avg_pay)) +
geom_col(fill=green)
#Top 5 locations with high average payments
loc_plt<-payment_summary_by_loc %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2017 & dos_month == 1) %>%
top_n(5) %>%
ggplot(aes(x=location_id,y=avg_pay)) +
geom_col(fill='green')
ggplotly(loc_plt)
#Top 5 locations with high average payments
loc_plt<-payment_summary_by_loc %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2017 & dos_month == 1) %>%
top_n(5) %>%
ggplot(aes(x=location_id,y=avg_pay,fill=location_d)) +
geom_col( )
ggplotly(loc_plt)
#Top 5 locations with high average payments
loc_plt<-payment_summary_by_loc %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2017 & dos_month == 1) %>%
top_n(5) %>%
ggplot(aes(x=location_id,y=avg_pay,fill='location_d')) +
geom_col( )
ggplotly(loc_plt)
#Top 5 locations with high average payments
loc_plt<-payment_summary_by_loc %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2017 & dos_month == 1) %>%
top_n(5) %>%
ggplot(aes(x=location_id,y=avg_pay)) +
geom_col( )
ggplotly(loc_plt)
#Top 5 locations with high average payments
loc_plt<-payment_summary_by_loc %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2017 & dos_month == 2) %>%
top_n(5) %>%
ggplot(aes(x=location_id,y=avg_pay)) +
geom_col( )
ggplotly(loc_plt)
#Top 5 locations with high average payments
loc_plt<-payment_summary_by_loc %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2017 & dos_month == 3) %>%
top_n(5) %>%
ggplot(aes(x=location_id,y=avg_pay)) +
geom_col( )
ggplotly(loc_plt)
#Top 5 locations with high average payments
loc_plt<-payment_summary_by_loc %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2017 & dos_month == 4) %>%
top_n(5) %>%
ggplot(aes(x=location_id,y=avg_pay)) +
geom_col( )
ggplotly(loc_plt)
runApp()
runApp()
view(payment_geom_summary)
runApp()
ggplot(dci_data_ws, aes(x=ca,y=payment) ) +
geom_point() + geom_smooth(method = 'lm') +
scale_x_log10() +
labs(x="ca", y = "payment", title = "Payment Vs ca")
ggplot(dci_data_ws, aes(x=ca,y=payment) ) +
geom_point() + geom_smooth(method = 'lm') +
scale_x_log10() +
labs(x="ca", y = "payment", title = "Payment Vs ca")
runApp()
runApp()
runApp()
View(dci_data_shiny)
View(dci_data_shiny)
View(dci_data_shiny)
View(dci_data_shiny)
ggplot(aes(x=hgb,y=payment) ) +
geom_point(alpha=0.4) + geom_smooth(method = 'lm')
ggplot(dci_data_shiny,aes(x=hgb,y=payment) ) +
geom_point(alpha=0.4) + geom_smooth(method = 'lm')
ggplot(dci_data_shiny,aes(x=k,y=payment) ) +
geom_point(alpha=0.4) + geom_smooth(method = 'lm')
features_shiny_df
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(payment_geom_summary)
View(payment_geom_summary)
runApp()
dci_data_shiny %>%
select(dos_year,payment) %>%
filter(dos_year==input$summary_year) %>%
summarise(round(sum(payment),digits = 2))
dci_data_ws %>%
select(dos_year,payment) %>%
filter(dos_year==input$summary_year) %>%
summarise(round(sum(payment),digits = 2))
dci_data_ws %>%
select(dos_year,payment) %>%
filter(dos_year==2019) %>%
summarise(round(sum(payment),digits = 2))
dci_data_ws %>%
select(dos_year,payment) %>%
dci_data_ws %>%
select(dos_year,payment)
dci_data_ws %>%
select(dos_year,payment,part_a,part_b)
dci_data_ws %>%
select(dos_year,pdos_month,ayment,part_a,part_b) %>%
group_by(dos_year,dos_month)
dci_data_ws %>%
select(dos_year,pdos_month,payment,part_a,part_b) %>%
group_by(dos_year,dos_month) %>%
ungroup()
dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b) %>%
group_by(dos_year,dos_month) %>%
ungroup()
dci_data_ws %>%
select(location_id,dos_year,dos_month,payment,part_a,part_b) %>%
group_by(dos_year,dos_month) %>%
ungroup()
dci_data_ws %>%
select(location_id,dos_year,dos_month,payment,part_a,part_b) %>%
group_by(dos_year,dos_month,location_id) %>%
ungroup()
dci_data_ws %>%
select(location_id,dos_year,dos_month,payment,part_a,part_b)
dci_data_ws %>%
select(location_id,dos_year,dos_month,payment,part_a,part_b) %>%
mutate(percentage_a = part_a/payment*100)
dci_data_ws %>%
select(location_id,dos_year,dos_month,payment,part_a,part_b) %>%
mutate(percentage_a = round(part_a/payment*100),digits=2)
dci_data_ws %>%
select(location_id,dos_year,dos_month,payment,part_a,part_b) %>%
mutate(percentage_a = round(part_a/payment*100))
dci_data_ws %>%
select(location_id,dos_year,dos_month,payment,part_a,part_b) %>%
mutate(percentage_a = round(part_a/payment*100),
percentage_b = round(part_b/payment*100))
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
install.packages('ggpubr')
runApp()
tibble('variable' = corrs[1,1:12] %>% names(),'correlation' = corrs[1,2:12]) %>%
ggplot(aes(x=reorder(variable,correlation),y = correlation)) +
geom_point()+
geom_segment(aes(xend=variable,yend=0))+
coord_flip() +
geom_hline(yintercept = 0)
tibble('variable' = corrs[1,2:12] %>% names(),'correlation' = corrs[1,2:12]) %>%
ggplot(aes(x=reorder(variable,correlation),y = correlation)) +
geom_point()+
geom_segment(aes(xend=variable,yend=0))+
coord_flip() +
geom_hline(yintercept = 0)
runApp()
runApp()
runApp()
runApp()
loc_plt_data<-payment_geom_summary %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==input$loc_year & dos_month == input$loc_month_slider) %>%
top_n(5)
loc_plt_data<-payment_geom_summary %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2018r & dos_month ==1) %>%
top_n(5)
loc_plt_data<-payment_geom_summary %>%
arrange(desc(totalpayments)) %>%
filter(dos_year==2018 & dos_month ==1) %>%
top_n(5)
View(loc_plt_data)
View(loc_plt_data)
View(loc_plt_data)
View(loc_plt_data)
runApp()
ggplotly(loc_plt)
myClicks
runApp()
runApp()
runApp()
runApp()
runApp('test')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(loc_plt_data)
View(loc_plt_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(dci_data_shiny)
View(dci_data_shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(dci_data_shiny)
View(dci_data_shiny)
runApp()
runApp()
View(dci_data_shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(payment_geom_summary)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
#distribution by payment type
payment_type_dist<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,part_b,inpatient,outpatient_dialysis)%>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment")
saveRDS(payment_type_dist,file="DCI_midcourse/data/payment_type_dist.rds")
runApp()
View(payment_type_dist)
#distribution by payment type
payment_type_dist<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,part_b,inpatient,outpatient_dialysis)%>%
pivot_longer(payment:outpatient_dialysis,names_to="payment_type",values_to = "payment")
saveRDS(payment_type_dist,file="DCI_midcourse/data/payment_type_dist.rds")
runApp()
#distribution by payment type
payment_type_dist<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b,inpatient,outpatient_dialysis)%>%
pivot_longer(payment:outpatient_dialysis,names_to="payment_type",values_to = "payment")
saveRDS(payment_type_dist,file="DCI_midcourse/data/payment_type_dist.rds")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(payment_summary_by_loc)
View(dci_data_shiny)
View(dci_data_shiny)
View(dci_data_shiny)
runApp()
runApp()
