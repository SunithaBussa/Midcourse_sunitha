pl<-dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys,part_b) %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color=payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys,part_b)
dci_payments_pivot<-dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys) %>%
pivot_longer(payment:part_b_phys,names_to="payment_type",values_to = "payment")
dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys) %>%
pivot_longer(payment:part_b_phys,names_to="payment_type",values_to = "payment")
View(dci_data_ws)
dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys) %>%
pivot_longer(payment:part_b_phys,names_to="payment_type",values_to = "payment")
#plot the
pl<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,part_b) %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color=payment_type,group = dos_year)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys,part_b)
#plot the
pl<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,part_b) %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color=dos_year,group = payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys,part_b)
#plot the
pl<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,part_b) %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys,part_b)
#plot the
pl<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b) %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys,part_b)
#plot the
pl<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b) %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=round(payment,digits=2),fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys,part_b)
#plot the
pl<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b) %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys,part_b)
#plot the
pl<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b) %>%
filter(dos_year==2017) %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys,part_b)
#plot the
pl<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b) %>%
filter(dos_year==2018) %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys,part_b)
#plot the
pl<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b) %>%
filter(dos_year==2018 & dos_month==1) %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys,part_b)
#plot the
pl<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b) %>%
filter(dos_year==2018 & dos_month==2) %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys,part_b)
#plot the
pl<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b,location_id) %>%
filter(dos_year==2018 & dos_month==2) %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys,part_b)
#plot the
pl<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b,location_id) %>%
filter(dos_year==2018 & dos_month==2) %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys,part_b,location_id)
#plot the
pl<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b,location_id) %>%
filter(dos_year==2018 & dos_month==2 & location_id=='000269') %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
dci_data_ws %>%
select(payment,part_a,part_b_dme,part_b_phys,part_b,location_id)
runApp()
runApp()
#distribution by payment types.
payment_type_data<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b,location_id)
#distribution by payment types.
payment_type_data<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b,location_id)
payment_type_data
#fat tailed dis.
dci_payments_pivot %>%
ggplot(aes(y = payment,x = payment_type,fill=payment_type)) +
geom_boxplot()+
scale_y_log10()
payment_types <- dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys) %>%
pivot_longer(payment:part_b_phys,names_to="payment_type",values_to = "payment")
#plot the
pl<-payment_types %>%
filter(dos_year==2018 & dos_month==2 & location_id=='000269') %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
View(payment_type_data)
View(payment_types)
View(payment_type_data)
View(payment_types)
payment_type_dist <- dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys)%>%
pivot_longer(payment:part_b_phys,names_to="payment_type",values_to = "payment")
View(payment_type_dist)
View(payment_type_dist)
payment_type_dist <- dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,location_id)%>%
pivot_longer(payment:part_b_phys,names_to="payment_type",values_to = "payment")
payment_type_dist <- dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,location_id)%>%
pivot_longer(payment:part_b_phys,names_to="payment_type",values_to = "payment")
payment_type_dist
payment_type_dist <- dci_data_ws %>%
select(location_id,dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys)%>%
pivot_longer(payment:part_b_phys,names_to="payment_type",values_to = "payment")
payment_type_dist
#plot the
pl<-payment_type_dist %>%
filter(dos_year==2018 & dos_month==2 & location_id=='000269') %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
#distribution by payment types.
payment_type_dist <- dci_data_ws %>%
select(location_id,dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,part_b)%>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment")
payment_type_dist
#plot the
pl<-payment_type_dist %>%
filter(dos_year==2018 & dos_month==2 & location_id=='000269') %>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
#distribution by payment types.
payment_type_dist <- dci_data_ws %>%
select(location_id,dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,part_b)%>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment")
payment_type_dist
#distribution by payment types.
payment_type_dist <- dci_data_ws %>%
select(location_id,dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,part_b)%>%
# pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment")
payment_type_dist
dci_data_ws %>%
select(location_id,dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,part_b)
dci_data_ws %>%
select(location_id,dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,part_b)%>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment")
payment_type_dist<-dci_data_ws %>%
select(location_id,dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,part_b)%>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment")
payment_type_dist
#distribution by payment type
payment_type_dist<-dci_data_ws %>%
select(location_id,dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,part_b)%>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment")
payment_type_dist
#plot the
pl<-payment_type_dist %>%
filter(dos_year==2018 & dos_month==2 & location_id=='000269') %>%
# pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
#plot the
pl<-payment_type_dist %>%
filter(dos_year==2018 & dos_month==2) %>%
# pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
#plot the
pl<-payment_type_dist %>%
filter(dos_year==2018 & dos_month==2) %>%
# pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
#distribution by payment type
payment_type_dist<-dci_data_ws %>%
select(dos_year,dos_month,payment,part_a,part_b_dme,part_b_phys,part_b)%>%
pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment")
payment_type_dist
#plot the
pl<-payment_type_dist %>%
filter(dos_year==2018 & dos_month==2) %>%
# pivot_longer(payment:part_b,names_to="payment_type",values_to = "payment") %>%
ggplot( aes(x=payment,fill=payment_type,color= payment_type)) +
geom_histogram(bins= 40,binwidth = 0.05,alpha=0.3,position = "identity") +
scale_x_log10() +
geom_vline(aes(xintercept = mean(payment,na.rm=T)),color = "red", linetype = "dashed",size = 1) +
labs(x="Logged payments",y="Frequency",title = "distribution of payments across payment sources")
ggplotly(pl)
#fat tailed dis.
payment_type_dist %>%
ggplot(aes(y = payment,x = payment_type,fill=payment_type)) +
geom_boxplot()+
scale_y_log10()
dci_data<-detail_raw_data
dci_data<-dci_data %>%
select(-esco_id,-bene_hic_num,-full_encounter,-phys_neph,-phys_hosp,-phys_ed,-ambulance,-phys_other,-esco_aligned_flag,-inpatient_fluid,-outpatient_er_fluid,-part_a_other_fluid,-patient_id_1,-dos_yyyy,-dos_mm,-esrd_date,-hgb_date,-tsat_date,-ferr_date,-albumin_date,-pth_date,-ca_date,-cca_date,-ph_date,-k_date,-urr_date,-ktv_date,-epo_given,-venofer_wasted,-inpatient_access,-outpatient_er_access,-part_a_other_access,-dci_claims,-non_dci_claims,-hha,-hospice,-dme,-start_date,-end_date,-epo_ceiling,-route_freq,-drug_name,-ferritin_cutoff,-tsat_cutoff,-hgb_cutoff,-ferrlecit_wasted,-zemplar_iv_wasted,-calcijex_iv_wasted,-feraheme_wasted,-hectorol_iv_wasted,-tx_missed,-sensipar_dispensed)
names(dci_data)
dci_data<-detail_raw_data
#Get the data with all the required fields for analysis
#claim_detail_raw_data<-fread("data/claim_details.csv",sep = "|",fill = T)
detail_raw_data<-read_csv ('data/claim_details.csv' )
#get detail and summary data and save it in a df
detail_raw_data<-read_csv ('data/claim_details.csv' )
dci_data<-detail_raw_data
dci_data<-dci_data %>%
select(-esco_id,-bene_hic_num,-full_encounter,-phys_neph,-phys_hosp,-phys_ed,-ambulance,-phys_other,-esco_aligned_flag,-inpatient_fluid,-outpatient_er_fluid,-part_a_other_fluid,-patient_id_1,-dos_yyyy,-dos_mm,-esrd_date,-hgb_date,-tsat_date,-ferr_date,-albumin_date,-pth_date,-ca_date,-cca_date,-ph_date,-k_date,-urr_date,-ktv_date,-epo_given,-venofer_wasted,-inpatient_access,-outpatient_er_access,-part_a_other_access,-dci_claims,-non_dci_claims,-hha,-hospice,-dme,-start_date,-end_date,-epo_ceiling,-route_freq,-drug_name,-ferritin_cutoff,-tsat_cutoff,-hgb_cutoff,-ferrlecit_wasted,-zemplar_iv_wasted,-calcijex_iv_wasted,-feraheme_wasted,-hectorol_iv_wasted,-tx_missed,-sensipar_dispensed)
names(dci_data)
#make sure all the columns are in correct data types.
#change claims date columns to date datatype
date_columns <- c("claim_first_dialysis_date","claim_last_dialysis_date")
dci_data[date_columns] <- lapply(dci_data[date_columns],as.Date)
#change the other columns to factor
fac_columns <- c("patient_id","dos_year","location_id","dos_month","modality","tx","tx_epo","sup_name")
dci_data[fac_columns] <- lapply(dci_data[fac_columns],as.factor)
#change the below columns to logical
bool_columns <- c("epo_protocol_flag","iron_protocol_flag","nutsup_protocol_flag","hgb_exclude_flag","active_flag")
dci_data[bool_columns] <- lapply(dci_data[bool_columns],as.logical)
#Make below colums as logical true if they have any value else if they have null make it logical false.
dci_data<-dci_data %>%
mutate_at(vars("ferrlecit_given","feraheme_given","venofer_given","zemplar_iv_given","hectorol_iv_given","calcijex_iv_given","zemplar_or_given","hectorol_or_given","calcijex_iv_given","zemplar_or_given","hectorol_or_given","calcijex_or_given","activase_given","prostat_given","nepro_given","liquacel_given","has_catheter","aranesp_given","protinex_given","mircera_given","sensipar_given","parsabiv_given","protein_bar_given",
"ice_cream_given","gelatein_given"),
funs(case_when(.=="NULL" ~ FALSE,
TRUE ~ TRUE)))
#FIRST make the null VALUES in char col to zero's except for date columns
num_columns <- c("hgb","tsat","ferr","albumin","pth","ca","cca","ph","k","urr","ktv","tx_epo")
dci_data[num_columns]<-dci_data[num_columns]%>%
replace(.=="NULL","0")
#change all the character columns ot numeric
dci_data<-dci_data %>% mutate_if(is.character,as.numeric)
#names(dci_data)
#as for date columns we cannot replace na values ot 0. first make them character columns and then make rest to the na values to 0 in entire dataframe
dci_data$claim_first_dialysis_date <-as.character.Date(dci_data$claim_first_dialysis_date )
dci_data$claim_last_dialysis_date <-as.character.Date(dci_data$claim_last_dialysis_date )
#make all na values to 0 in entire dataframe
dci_data[is.na(dci_data)]<-0
# sum(is.na(dci_data))
#making the dates column back to date datatype
dci_data$claim_first_dialysis_date <- as.Date(dci_data$claim_first_dialysis_date)
dci_data$claim_last_dialysis_date <- as.Date(dci_data$claim_last_dialysis_date)
#delete the outliers( payments which are less than 1500)
dci_data<-dci_data %>%
filter(`payment`>1500) %>%
arrange(desc(payment))
#combine 2 separate part_b payments to one
dci_data<-dci_data %>%
mutate(part_b = part_b_phys + part_b_dme)
dci_data %>%
select(payment,part_a,part_b_phys,part_b_dme,part_b)
dci_data_ws<- dci_data
dci_data_ws %>%
select (payment,part_a,part_b_phys,part_b_phys) %>%
ggplot(aes(x=payment) )+
geom_histogram(color="#e9ecef", alpha=0.6, position = 'identity', bins=40) +
scale_x_log10()+
scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(x="loggged payment values",
y="Counts",
title = "Payment distribution")
#make this interactive
p<- ggplot(dci_data_ws,aes(x=payment,y=..density..)) +
geom_histogram(bins=40,binwidth = 0.05,fill = "grey",color="black") +
scale_x_log10()+
geom_density(color = "red")+
labs(x="loggged payment values",
y="Frequency",
title = "Payment distribution")
ggplotly(p)
#make this interactive
p<- ggplot(dci_data_ws,aes(x=payment,y=..density..)) +
geom_histogram(bins=40,binwidth = 0.05,fill = "grey",color="black") +
scale_x_log10()+
geom_density(color = "red")+
labs(x="logged payments",
y="Frequency",
title = "Total Payments distribution")
ggplotly(p)
#make this interactive
p<- ggplot(dci_data_ws,aes(x=payment,y=..density..)) +
geom_histogram(bins=40,binwidth = 0.05,fill = "grey",color="black") +
scale_x_log10()+
geom_density(color = "blue")+
labs(x="logged payments",
y="Frequency",
title = "Total Payments distribution")
ggplotly(p)
#make this interactive
p<- ggplot(dci_data_ws,aes(x=payment,y=..density..)) +
geom_histogram(bins=40,binwidth = 0.05,fill = "grey",color="black",alpha=0.4) +
scale_x_log10()+
geom_density(color = "blue")+
labs(x="logged payments",
y="Frequency",
title = "Total Payments distribution")
ggplotly(p)
#make this interactive
p<- ggplot(dci_data_ws,aes(x=payment,y=..density..)) +
geom_histogram(bins=40,binwidth = 0.05,fill = "red",color="black",alpha=0.4) +
scale_x_log10()+
geom_density(color = "blue")+
labs(x="logged payments",
y="Frequency",
title = "Total Payments distribution")
ggplotly(p)
#make this interactive
p<- ggplot(dci_data_ws,aes(x=payment,y=..density..)) +
geom_histogram(bins=40,binwidth = 0.05,fill = "orange",color="black",alpha=0.4) +
scale_x_log10()+
geom_density(color = "blue")+
labs(x="logged payments",
y="Frequency",
title = "Total Payments distribution")
ggplotly(p)
#make this interactive
p<- ggplot(dci_data_ws,aes(x=payment,y=..density..)) +
geom_histogram(bins=40,binwidth = 0.05,fill = "blue",color="black",alpha=0.2) +
scale_x_log10()+
geom_density(color = "blue")+
labs(x="logged payments",
y="Frequency",
title = "Total Payments distribution")
ggplotly(p)
#make this interactive
p<- ggplot(dci_data_ws,aes(x=payment,y=..density..)) +
geom_histogram(bins=40,binwidth = 0.05,fill = "purple",color="black",alpha=0.2) +
scale_x_log10()+
geom_density(color = "blue")+
labs(x="logged payments",
y="Frequency",
title = "Total Payments distribution")
ggplotly(p)
#make this interactive
p<- ggplot(dci_data_ws,aes(x=payment,y=..density..)) +
geom_histogram(bins=40,binwidth = 0.05,fill = "black",color="black",alpha=0.2) +
scale_x_log10()+
geom_density(color = "blue")+
labs(x="logged payments",
y="Frequency",
title = "Total Payments distribution")
ggplotly(p)
#make this interactive
p<- ggplot(dci_data_ws,aes(x=payment,y=..density..)) +
geom_histogram(bins=40,binwidth = 0.05,fill = "black",color="black",alpha=0.2) +
scale_x_log10()+
geom_density(color = "red")+
labs(x="logged payments",
y="Frequency",
title = "Total Payments distribution")
ggplotly(p)
#make this interactive
p<- ggplot(dci_data_ws,aes(x=payment,y=..density..)) +
geom_histogram(bins=40,binwidth = 0.05,fill = "black",color="black",alpha=0.2) +
scale_x_log10()+
geom_density(color = "red")+
labs(x="logged payments",
y="Frequency",
title = "Total Payments distribution") +
scale_x_continuous(breaks = seq(0,130000,5000))
ggplotly(p)
#make this interactive
p<- ggplot(dci_data_ws,aes(x=payment,y=..density..)) +
geom_histogram(bins=40,binwidth = 0.05,fill = "black",color="black",alpha=0.2) +
scale_x_log10()+
geom_density(color = "red")+
labs(x="logged payments",
y="Frequency",
title = "Total Payments distribution") +
scale_x_continuous(breaks = seq(0,130000))
ggplotly(p)
#make this interactive
p<- ggplot(dci_data_ws,aes(x=payment,y=..density..)) +
geom_histogram(bins=40,binwidth = 0.05,fill = "black",color="black",alpha=0.2) +
scale_x_log10()+
geom_density(color = "red")+
labs(x="logged payments",
y="Frequency",
title = "Total Payments distribution") +
scale_x_continuous(breaks = seq(0,130000))
ggplotly(p)
